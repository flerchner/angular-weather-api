{"version":3,"sources":["webpack:///src/app/pages/levels/levels-routing.module.ts","webpack:///src/app/pages/levels/levels.module.ts","webpack:///src/app/pages/levels/levels.component.ts","webpack:///src/app/pages/levels/levels.component.html"],"names":["routes","path","component","LevelsRoutingModule","forChild","imports","exports","LevelsModule","declarations","LevelsComponent","levels","storageItem","storageArray","localStorage","getItem","getLevels","level","currentLevel","find","x","name","tempMax","tempMin","refreshLevels","setLocalStorage","window","alert","setItem","push","s","Number","console","log","i","itemStorage","JSON","parse","addLevelsStorage","title","StorageItem","levelTrigger","stringify","addThisLevel","selector","templateUrl","styleUrls"],"mappings":"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","file":"pages-levels-levels-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LevelsComponent } from './levels.component';\n\nconst routes: Routes = [\n  { path: '', component: LevelsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LevelsRoutingModule { }\n","import { NgModule } from '@angular/core';\n\nimport { LevelsRoutingModule } from './levels-routing.module';\n\nimport { LevelsComponent } from './levels.component';\nimport {NzButtonModule, NzGridModule, NzInputModule} from 'ng-zorro-antd';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n  imports: [LevelsRoutingModule, NzGridModule, CommonModule, NzInputModule, NzButtonModule, ReactiveFormsModule],\n  declarations: [LevelsComponent],\n  exports: [LevelsComponent]\n})\nexport class LevelsModule { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport { levels } from '../weather/levels';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './levels.component.html',\n  styleUrls: ['./levels.component.scss']\n})\nexport class LevelsComponent implements OnInit {\n  levels = levels;\n  storageItem = false;\n  currentLevel;\n  storageArray = [];\n  private s: number;\n  constructor() { }\n  ngOnInit() {\n    if (localStorage.getItem('levelStorage') !== null) {\n      this.storageItem = true;\n      this.getLevels();\n    }\n  }\n  // get Level by ID level.ts\n  getLevelById(level) {\n    this.currentLevel = levels.find(x => x.level === level);\n  }\n  // get Level by ID in Local Storage\n  getLevelByIdStorage(level) {\n    this.currentLevel = this.storageArray.find(x => x.level === level);\n  }\n  // edit Level with the ID which was clicked\n  editThisLevel(level, name, tempMax, tempMin) {\n    this.refreshLevels(level, name, tempMax, tempMin);\n    this.setLocalStorage(name, level, tempMax, tempMin);\n    window.alert('Edited Level ' + level);\n  }\n  // Add a new Level to StorageArray\n  addThisLevel(name, level, tempMax, tempMin) {\n    this.setLocalStorage(name, level, tempMax, tempMin);\n    localStorage.setItem('highestLevel', level);\n    levels.push({name, level, tempMax, tempMin});\n    this.storageArray.push({name, level, tempMax, tempMin});\n    window.alert('successfully added a new Level');\n  }\n  // Adding the Levels from levels.ts to the levels Array\n  addLevels(name, level, tempMax, tempMin) {\n    levels.push({name, level, tempMax, tempMin});\n  }\n  // Add the Level to the Storage- and levels Array\n  addLevelsStorage(name, level, tempMax, tempMin) {\n    levels.push({name, level, tempMax, tempMin});\n    this.storageArray.push({name, level, tempMax, tempMin});\n  }\n  // Add the Storage-Items if they exist, otherwise get the normal Levels-Items\n  getLevels() {\n    if (this.storageItem === true) {\n      if (localStorage.getItem('highestLevel') !== null) {\n        this.s = Number(localStorage.getItem('highestLevel'));\n      } else {\n        this.s = 5;\n        console.log(this.s);\n      }\n      for (let i = 0; i < this.s; i++) {\n        const itemStorage = JSON.parse(localStorage.getItem('levelStorage-' + (i + 1)));\n        if (itemStorage !== null) {\n          this.addLevelsStorage(itemStorage.title, (i + 1), itemStorage.tempMax, itemStorage.tempMin);\n        } else {\n          if (i < 5) {\n            this.storageArray.push(levels.find(x => x.level === i + 1));\n          }\n        }\n      }\n    }\n  }\n  // set The added or edited Data to the local Storage\n  setLocalStorage(name, level, tempMax, tempMin) {\n    const StorageItem = {\n      title: name,\n      level: level,\n      tempMax: tempMax,\n      tempMin: tempMin,\n      levelTrigger: 'true'\n    };\n    localStorage.setItem('levelStorage', 'true');\n    localStorage.setItem('levelStorage-' + level + '', JSON.stringify(StorageItem));\n  }\n  // refresh The Levels in here\n  refreshLevels(level, name, tempMax, tempMin) {\n    levels[level - 1].name = name;\n    levels[level - 1].tempMax = tempMax;\n    levels[level - 1].tempMin = tempMin;\n    this.storageArray[level - 1].name = name;\n    this.storageArray[level - 1].tempMax = tempMax;\n    this.storageArray[level - 1].tempMin = tempMin;\n  }\n}\n","<div class=\"welcome-container\">\r\n  <h3>Levels</h3>\r\n  <div nz-row nzJustify=\"space-between\">\r\n    <div nz-col [nzSpan]=\"8\">\r\n      <div *ngIf=\"storageItem;\">\r\n        <div *ngFor=\"let level of storageArray\">\r\n          <div (click)=\"getLevelByIdStorage(level.level)\" class=\"level-item\" nz-row nzType=\"flex\">\r\n            <div class=\"level-indicator\" nz-col [nzSpan]=\"3\">{{ level.level }}</div>\r\n            <div class=\"level-name\" nz-col [nzSpan]=\"21\">{{ level.name }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"!storageItem;\">\r\n        <div *ngFor=\"let level of levels\">\r\n          <div (click)=\"getLevelById(level.level)\" class=\"level-item\" nz-row nzType=\"flex\">\r\n            <div class=\"level-indicator\" nz-col [nzSpan]=\"3\">{{ level.level }}</div>\r\n            <div class=\"level-name\" nz-col [nzSpan]=\"21\">{{ level.name }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"currentLevel\" nz-col [nzSpan]=\"14\">\r\n      <h2>Edit Level {{ currentLevel.level }}</h2>\r\n      <div nz-row class=\"edit-item\">\r\n        <nz-input-group nz-col [nzSpan]=\"10\">\r\n          <p style=\"margin: 0;\">name:</p>\r\n          <input style=\"margin-bottom: 1em;\" nz-input #lvlName value=\"{{ currentLevel.name }}\" />\r\n          <p style=\"margin: 0;\">maximal temperature:</p>\r\n          <input style=\"margin-bottom: 1em;\" nz-input #lvlTempMax value=\"{{ currentLevel.tempMax }}\" />\r\n          <p style=\"margin: 0;\">minimal temperature:</p>\r\n          <input style=\"margin-bottom: 1em;\" nz-input #lvlTempMin value=\"{{ currentLevel.tempMin }}\" />\r\n        </nz-input-group>\r\n        <div nz-col [nzSpan]=\"24\">\r\n          <button style=\"margin-top: 1em;\" class=\"btn-submit\" nz-button nzType=\"primary\" (click)=\"editThisLevel(currentLevel.level, lvlName.value, lvlTempMax.value, lvlTempMin.value)\">Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div nz-row>\r\n      <h3 nz-col [nzSpan]=\"24\">Add new Level</h3>\r\n      <input style=\"margin-bottom: 1em;\" nz-col [nzSpan]=\"8\" nz-input #newName placeholder=\"name\"/>\r\n      <div nz-col [nzSpan]=\"16\"></div>\r\n      <input style=\"margin-bottom: 1em;\" nz-col [nzSpan]=\"8\" nz-input #newLevel placeholder=\"level\"/>\r\n      <div nz-col [nzSpan]=\"16\"></div>\r\n      <input style=\"margin-bottom: 1em;\" nz-col [nzSpan]=\"8\" nz-input #newMaxtemp placeholder=\"maximal temperature\"/>\r\n      <div nz-col [nzSpan]=\"16\"></div>\r\n      <input style=\"margin-bottom: 1em;\" nz-col [nzSpan]=\"8\" nz-input #newMintemp placeholder=\"minimal temperature\"/>\r\n      <div nz-col [nzSpan]=\"16\"></div>\r\n      <button nz-button nzType=\"primary\" (click)=\"addThisLevel(newName.value, newLevel.value, newMaxtemp.value, newMintemp.value)\">Add new Level</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]}