{"version":3,"sources":["./src/app/weather-api.service.ts","./src/app/pages/weather/countries.ts","./src/app/pages/weather/weather-routing.module.ts","./src/app/pages/weather/weather.component.ts","./src/app/pages/weather/weather.component.html","./src/app/pages/weather/weather.module.ts"],"names":[],"mappings":"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","file":"pages-weather-weather-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nclass Weather {\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherApiService {\n  private weatherApi: string;\n\n  constructor(private http: HttpClient) { }\n\n  getData(location, lang) {\n    if (/^\\d+$/.test(location)) {\n      this.weatherApi = 'http://api.openweathermap.org/data/2.5/weather?zip=' + location + ',' +  lang + '&units=metric&appid=3770eec4f553ea1432f25fc0f993be1d';\n    } else {\n      this.weatherApi = 'http://api.openweathermap.org/data/2.5/weather?q=' + location + '&lang=' + lang + '&units=metric&appid=3770eec4f553ea1432f25fc0f993be1d';\n    }\n    return this.http.get(this.weatherApi);\n  }\n}\n","export const countries = [\r\n  {id: 1, code: 'AF', name: 'Afghanistan'},\r\n  {id: 2, code: 'AL', name: 'Albania'},\r\n  {id: 3, code: 'DZ', name: 'Algeria'},\r\n  {id: 4, code: 'AS', name: 'American Samoa'},\r\n  {id: 5, code: 'AD', name: 'Andorra'},\r\n  {id: 6, code: 'AO', name: 'Angola'},\r\n  {id: 7, code: 'AI', name: 'Anguilla'},\r\n  {id: 8, code: 'AQ', name: 'Antarctica'},\r\n  {id: 9, code: 'AG', name: 'Antigua and Barbuda'},\r\n  {id: 10, code: 'AR', name: 'Argentina'},\r\n  {id: 11, code: 'AM', name: 'Armenia'},\r\n  {id: 12, code: 'AW', name: 'Aruba'},\r\n  {id: 13, code: 'AU', name: 'Australia'},\r\n  {id: 14, code: 'AT', name: 'Austria'},\r\n  {id: 15, code: 'AZ', name: 'Azerbaijan'},\r\n  {id: 16, code: 'BS', name: 'Bahamas'},\r\n  {id: 17, code: 'BH', name: 'Bahrain'},\r\n  {id: 18, code: 'BD', name: 'Bangladesh'},\r\n  {id: 19, code: 'BB', name: 'Barbados'},\r\n  {id: 20, code: 'BY', name: 'Belarus'},\r\n  {id: 21, code: 'BE', name: 'Belgium'},\r\n  {id: 22, code: 'BZ', name: 'Belize'},\r\n  {id: 23, code: 'BJ', name: 'Benin'},\r\n  {id: 24, code: 'BM', name: 'Bermuda'},\r\n  {id: 25, code: 'BT', name: 'Bhutan'},\r\n  {id: 26, code: 'BO', name: 'Bolivia Plurinational State of'},\r\n  {id: 27, code: 'BQ', name: 'Bonaire, Sint Eustatius and Saba'},\r\n  {id: 28, code: 'BA', name: 'Bosnia and Herzegovina'},\r\n  {id: 29, code: 'BW', name: 'Botswana'},\r\n  {id: 30, code: 'BV', name: 'Bouvet Island'},\r\n  {id: 31, code: 'BR', name: 'Brazil'},\r\n  {id: 32, code: 'IO', name: 'British Indian Ocean Territory (the)'},\r\n  {id: 33, code: 'BN', name: 'Brunei Darussalam'},\r\n  {id: 34, code: 'BG', name: 'Bulgaria'},\r\n  {id: 35, code: 'BF', name: 'Burkina Faso'},\r\n  {id: 36, code: 'BI', name: 'Burundi'},\r\n  {id: 37, code: 'CV', name: 'Cabo Verde'},\r\n  {id: 38, code: 'KH', name: 'Cambodia'},\r\n  {id: 39, code: 'CM', name: 'Cameroon'},\r\n  {id: 40, code: 'CA', name: 'Canada'},\r\n  {id: 41, code: 'KY', name: 'Cayman Islands (the)'},\r\n  {id: 42, code: 'CF', name: 'Central African Republic (the)'},\r\n  {id: 43, code: 'TD', name: 'Chad'},\r\n  {id: 44, code: 'CL', name: 'Chile'},\r\n  {id: 45, code: 'CN', name: 'China'},\r\n  {id: 46, code: 'CX', name: 'Christmas Island'},\r\n  {id: 47, code: 'CC', name: 'Cocos (Keeling) Islands (the)'},\r\n  {id: 48, code: 'CO', name: 'Colombia'},\r\n  {id: 49, code: 'KM', name: 'Comoros (the)'},\r\n  {id: 50, code: 'CD', name: 'Congo (the Democratic Republic of the)'},\r\n  {id: 51, code: 'CG', name: 'congo (the)'},\r\n  {id: 52, code: 'CK', name: 'Cook Islands (the)'},\r\n  {id: 53, code: 'CR', name: 'Costa Rica'},\r\n  {id: 54, code: 'HR', name: 'Croatia'},\r\n  {id: 55, code: 'CU', name: 'Cuba'},\r\n  {id: 56, code: 'CW', name: 'Curaçao'},\r\n  {id: 57, code: 'CY', name: 'Cyprus'},\r\n  {id: 58, code: 'CZ', name: 'Czechia'},\r\n  {id: 59, code: 'CI', name: 'Côte d Ivoire'},\r\n  {id: 60, code: 'DK', name: 'Denmark'},\r\n  {id: 61, code: 'DJ', name: 'Djibouti'},\r\n  {id: 62, code: 'DM', name: 'Dominica'},\r\n  {id: 63, code: 'DO', name: 'Dominican Republic (the)'},\r\n  {id: 64, code: 'EC', name: 'Ecuador'},\r\n  {id: 65, code: 'EG', name: 'Egypt'},\r\n  {id: 66, code: 'SV', name: 'El Salvador'},\r\n  {id: 67, code: 'GQ', name: 'Equatorial Guinea'},\r\n  {id: 68, code: 'ER', name: 'Eritrea'},\r\n  {id: 69, code: 'EE', name: 'Estonia'},\r\n  {id: 70, code: 'SZ', name: 'Eswatini'},\r\n  {id: 71, code: 'ET', name: 'Ethiopia'},\r\n  {id: 72, code: 'FK', name: 'Falkland Islands (the) [Malvinas]'},\r\n  {id: 73, code: 'FO', name: 'Faroe Islands (the)'},\r\n  {id: 74, code: 'FJ', name: 'Fiji'},\r\n  {id: 75, code: 'FI', name: 'Finland'},\r\n  {id: 76, code: 'FR', name: 'France'},\r\n  {id: 77, code: 'GF', name: 'French Guiana'},\r\n  {id: 78, code: 'PF', name: 'French Polynesia'},\r\n  {id: 79, code: 'TF', name: 'French Southern Territories (the)'},\r\n  {id: 80, code: 'GA', name: 'Gabon'},\r\n  {id: 81, code: 'GM', name: 'Gambia (the)'},\r\n  {id: 82, code: 'GE', name: 'Georgia'},\r\n  {id: 83, code: 'DE', name: 'Germany'},\r\n  {id: 84, code: 'GH', name: 'Ghana'},\r\n  {id: 85, code: 'GI', name: 'Gibraltar'},\r\n  {id: 86, code: 'GR', name: 'Greece'},\r\n  {id: 87, code: 'GL', name: 'Greenland'},\r\n  {id: 88, code: 'GD', name: 'Grenada'},\r\n  {id: 89, code: 'GP', name: 'Guadeloupe'},\r\n  {id: 90, code: 'GU', name: 'Guam'},\r\n  {id: 91, code: 'GT', name: 'Guatemala'},\r\n  {id: 92, code: 'GG', name: 'Guernsey'},\r\n  {id: 93, code: 'GN', name: 'Guinea'},\r\n  {id: 94, code: 'GW', name: 'Guinea-Bissau'},\r\n  {id: 95, code: 'GY', name: 'Guyana'},\r\n  {id: 96, code: 'HT', name: 'Haiti'},\r\n  {id: 97, code: 'HM', name: 'Heard Island and McDonald Islands'},\r\n  {id: 98, code: 'VA', name: 'Holy See (the)'},\r\n  {id: 99, code: 'HN', name: 'Honduras'},\r\n  {id: 100, code: 'HK', name: 'Hong Kong'},\r\n  {id: 101, code: 'HU', name: 'Hungary'},\r\n  {id: 102, code: 'IS', name: 'Iceland'},\r\n  {id: 103, code: 'IN', name: 'India'},\r\n  {id: 104, code: 'ID', name: 'Indonesia'},\r\n  {id: 105, code: 'IR', name: 'Iran (Islamic Republic of)'},\r\n  {id: 106, code: 'IQ', name: 'Iraq'},\r\n  {id: 107, code: 'IE', name: 'Ireland'},\r\n  {id: 108, code: 'IM', name: 'Isle of Man'},\r\n  {id: 109, code: 'IL', name: 'Israel'},\r\n  {id: 110, code: 'IT', name: 'Italy'},\r\n  {id: 111, code: 'JM', name: 'Jamaica'},\r\n  {id: 112, code: 'JP', name: 'Japan'},\r\n  {id: 113, code: 'JE', name: 'Jersey'},\r\n  {id: 114, code: 'JO', name: 'Jordan'},\r\n  {id: 115, code: 'KZ', name: 'Kazakhstan'},\r\n  {id: 116, code: 'KE', name: 'Kenya'},\r\n  {id: 117, code: 'KI', name: 'Kiribati'},\r\n  {id: 118, code: 'KP', name: 'Korea (the Democratic Peoples Republic of)'},\r\n  {id: 119, code: 'KR', name: 'Korea (the Republic of)'},\r\n  {id: 120, code: 'KW', name: 'Kuwait'},\r\n  {id: 121, code: 'KG', name: 'Kyrgyzstan'},\r\n  {id: 122, code: 'LA', name: 'Lao Peoples Democratic Republic (the)'},\r\n  {id: 123, code: 'LV', name: 'Latvia'},\r\n  {id: 124, code: 'LB', name: 'Lebanon'},\r\n  {id: 125, code: 'LS', name: 'Lesotho'},\r\n  {id: 126, code: 'LR', name: 'Liberia'},\r\n  {id: 127, code: 'LY', name: 'Libya'},\r\n  {id: 128, code: 'LI', name: 'Liechtenstein'},\r\n  {id: 129, code: 'LT', name: 'Lithuania'},\r\n  {id: 130, code: 'LU', name: 'Luxembourg'},\r\n  {id: 131, code: 'MO', name: 'Macao'},\r\n  {id: 132, code: 'MG', name: 'Madagascar'},\r\n  {id: 133, code: 'MW', name: 'Malawi'},\r\n  {id: 134, code: 'MY', name: 'Malaysia'},\r\n  {id: 135, code: 'MV', name: 'Maldives'},\r\n  {id: 136, code: 'ML', name: 'Mali'},\r\n  {id: 137, code: 'MT', name: 'Malta'},\r\n  {id: 138, code: 'MH', name: 'Marshall Islands (the)'},\r\n  {id: 139, code: 'MQ', name: 'Martinique'},\r\n  {id: 140, code: 'MR', name: 'Mauritania'},\r\n  {id: 141, code: 'MU', name: 'Mauritius'},\r\n  {id: 142, code: 'YT', name: 'Mayotte'},\r\n  {id: 143, code: 'MX', name: 'Mexico'},\r\n  {id: 144, code: 'FM', name: 'Micronesia (Federated States of)'},\r\n  {id: 145, code: 'MD', name: 'Moldova (the Republic of)'},\r\n  {id: 146, code: 'MC', name: 'Monaco'},\r\n  {id: 147, code: 'MN', name: 'Mongolia'},\r\n  {id: 148, code: 'ME', name: 'Montenegro'},\r\n  {id: 149, code: 'MS', name: 'Montserrat'},\r\n  {id: 150, code: 'MA', name: 'Morocco'},\r\n  {id: 151, code: 'MZ', name: 'Mozambique'},\r\n  {id: 152, code: 'MM', name: 'Myanmar'},\r\n  {id: 153, code: 'NA', name: 'Namibia'},\r\n  {id: 154, code: 'NR', name: 'Nauru'},\r\n  {id: 155, code: 'NP', name: 'Nepal'},\r\n  {id: 156, code: 'NL', name: 'Netherlands (the)'},\r\n  {id: 157, code: 'NC', name: 'New Caledonia'},\r\n  {id: 158, code: 'NZ', name: 'New Zealand'},\r\n  {id: 159, code: 'NI', name: 'Nicaragua'},\r\n  {id: 160, code: 'NE', name: 'Niger (the)'},\r\n  {id: 161, code: 'NG', name: 'Nigeria'},\r\n  {id: 162, code: 'NU', name: 'Niue'},\r\n  {id: 163, code: 'NF', name: 'Norfolk Island'},\r\n  {id: 164, code: 'MP', name: 'Northern Mariana Islands (the)'},\r\n  {id: 165, code: 'NO', name: 'Norway'},\r\n  {id: 166, code: 'OM', name: 'Oman'},\r\n  {id: 167, code: 'PK', name: 'Pakistan'},\r\n  {id: 168, code: 'PW', name: 'Palau'},\r\n  {id: 169, code: 'PS', name: 'Palestine, State of'},\r\n  {id: 170, code: 'PA', name: 'Panama'},\r\n  {id: 171, code: 'PG', name: 'Papua New Guinea'},\r\n  {id: 172, code: 'PY', name: 'Paraguay'},\r\n  {id: 173, code: 'PE', name: 'Peru'},\r\n  {id: 174, code: 'PH', name: 'Philippines (the)'},\r\n  {id: 175, code: 'PN', name: 'Pitcairn'},\r\n  {id: 176, code: 'PL', name: 'Poland'},\r\n  {id: 177, code: 'PT', name: 'Portugal'},\r\n  {id: 178, code: 'PR', name: 'Puerto Rico'},\r\n  {id: 179, code: 'QA', name: 'Qatar'},\r\n  {id: 180, code: 'MK', name: 'Republic of North Macedonia'},\r\n  {id: 181, code: 'RO', name: 'Romania'},\r\n  {id: 182, code: 'RU', name: 'Russian Federation (the)'},\r\n  {id: 183, code: 'RW', name: 'Rwanda'},\r\n  {id: 184, code: 'RE', name: 'Réunion'},\r\n  {id: 185, code: 'BL', name: 'Saint Barthélemy'},\r\n  {id: 186, code: 'SH', name: 'Saint Helena, Ascension and Tristan da Cunha'},\r\n  {id: 187, code: 'KN', name: 'Saint Kitts and Nevis'},\r\n  {id: 188, code: 'LC', name: 'Saint Lucia'},\r\n  {id: 189, code: 'MF', name: 'Saint Martin (French part)'},\r\n  {id: 190, code: 'PM', name: 'Saint Pierre and Miquelon'},\r\n  {id: 191, code: 'VC', name: 'Saint Vincent and the Grenadines'},\r\n  {id: 192, code: 'WS', name: 'Samoa'},\r\n  {id: 193, code: 'SM', name: 'San Marino'},\r\n  {id: 194, code: 'ST', name: 'Sao Tome and Principe'},\r\n  {id: 195, code: 'SA', name: 'Saudi Arabia'},\r\n  {id: 196, code: 'SN', name: 'Senegal'},\r\n  {id: 197, code: 'RS', name: 'Serbia'},\r\n  {id: 198, code: 'SC', name: 'Seychelles'},\r\n  {id: 199, code: 'SL', name: 'Sierra Leone'},\r\n  {id: 200, code: 'SG', name: 'Singapore'},\r\n  {id: 201, code: 'SX', name: 'Sint Maarten (Dutch part)'},\r\n  {id: 202, code: 'SK', name: 'Slovakia'},\r\n  {id: 203, code: 'SI', name: 'Slovenia'},\r\n  {id: 204, code: 'SB', name: 'Solomon Islands'},\r\n  {id: 205, code: 'SO', name: 'Somalia'},\r\n  {id: 206, code: 'ZA', name: 'South Africa'},\r\n  {id: 207, code: 'GS', name: 'South Georgia and the South Sandwich Islands'},\r\n  {id: 208, code: 'SS', name: 'South Sudan'},\r\n  {id: 209, code: 'ES', name: 'Spain'},\r\n  {id: 210, code: 'LK', name: 'Sri Lanka'},\r\n  {id: 211, code: 'SD', name: 'Sudan (the)'},\r\n  {id: 212, code: 'SR', name: 'Suriname'},\r\n  {id: 213, code: 'SJ', name: 'Svalbard and Jan Mayen'},\r\n  {id: 214, code: 'SE', name: 'Sweden'},\r\n  {id: 215, code: 'CH', name: 'Switzerland'},\r\n  {id: 216, code: 'SY', name: 'Syrian Arab Republic'},\r\n  {id: 217, code: 'TW', name: 'Taiwan'},\r\n  {id: 218, code: 'TJ', name: 'Tajikistan'},\r\n  {id: 219, code: 'TZ', name: 'Tanzania, United Republic of'},\r\n  {id: 220, code: 'TH', name: 'Thailand'},\r\n  {id: 221, code: 'TL', name: 'Timor-Leste'},\r\n  {id: 222, code: 'TG', name: 'Togo'},\r\n  {id: 223, code: 'TK', name: 'Tokelau'},\r\n  {id: 224, code: 'TO', name: 'Tonga'},\r\n  {id: 225, code: 'TT', name: 'Trinidad and Tobago'},\r\n  {id: 226, code: 'TN', name: 'Tunisia'},\r\n  {id: 227, code: 'TR', name: 'Turkey'},\r\n  {id: 228, code: 'TM', name: 'Turkmenistan'},\r\n  {id: 229, code: 'TC', name: 'Turks and Caicos Islands (the)'},\r\n  {id: 230, code: 'TV', name: 'Tuvalu'},\r\n  {id: 231, code: 'UG', name: 'Uganda'},\r\n  {id: 232, code: 'UA', name: 'Ukraine'},\r\n  {id: 233, code: 'AE', name: 'United Arab Emirates (the)'},\r\n  {id: 234, code: 'GB', name: 'United Kingdom of Great Britain and Northern Ireland (the)'},\r\n  {id: 235, code: 'UM', name: 'United States Minor Outlying Islands (the)'},\r\n  {id: 236, code: 'US', name: 'United States of America (the)'},\r\n  {id: 237, code: 'UY', name: 'Uruguay'},\r\n  {id: 238, code: 'UZ', name: 'Uzbekistan'},\r\n  {id: 239, code: 'VU', name: 'Vanuatu'},\r\n  {id: 240, code: 'VE', name: 'Venezuela (Bolivarian Republic of)'},\r\n  {id: 241, code: 'VN', name: 'Viet Nam'},\r\n  {id: 242, code: 'VG', name: 'Virgin Islands (British)'},\r\n  {id: 243, code: 'VI', name: 'Virgin Islands (U.S.)'},\r\n  {id: 244, code: 'WF', name: 'Wallis and Futuna'},\r\n  {id: 245, code: 'EH', name: 'Western Sahara'},\r\n  {id: 246, code: 'YE', name: 'Yemen'},\r\n  {id: 247, code: 'ZM', name: 'Zambia'},\r\n  {id: 248, code: 'ZW', name: 'Zimbabwe'},\r\n  {id: 249, code: 'AX', name: 'Åland Islands'}\r\n];\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WeatherComponent } from './weather.component';\n\nconst routes: Routes = [\n  { path: '', component: WeatherComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { levels } from './levels';\nimport { countries } from './countries';\n\nimport { WeatherApiService } from '../../weather-api.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  constructor(private weatherApi: WeatherApiService) { }\n  levels = levels;\n  currentLevel;\n  countries = countries;\n  private temperature: number;\n  public dataLevel: number;\n  langId;\n  public currentTemp;\n  public currentCity;\n  public currentWeatherinfo;\n\n  ngOnInit() {}\n\n  ApiCall(locationId) {\n    this.weatherApi.getData(locationId, this.langId).subscribe((data) => {\n      // @ts-ignore\n      this.temperature = Math.round(data.main.temp);\n      // @ts-ignore\n      this.currentTemp = Math.round(data.main.temp);\n      // @ts-ignore\n      this.currentCity = data.name;\n      // @ts-ignore\n      this.currentWeatherinfo = data.weather[0].main;\n      this.Recommendation(this.temperature);\n    });\n  }\n\n  Recommendation(temp) {\n    if (temp >= 26) {\n      this.dataLevel = 1;\n    } else if (21 <= temp && temp < 26) {\n      this.dataLevel = 2;\n    } else if (15 <= temp && temp < 21) {\n      this.dataLevel = 3;\n    } else if (5 <= temp && temp < 15) {\n      this.dataLevel = 4;\n    } else if (temp < 5) {\n      this.dataLevel = 5;\n    }\n    this.currentLevel = this.getLevelById(this.dataLevel);\n  }\n  getLevelById(level) {\n    return levels.find(x => x.level === level);\n  }\n}\n","<div class=\"recommendation-container\">\r\n  <h3>Clothing recommendation</h3>\r\n  <h2>Lookup</h2>\r\n  Location:\r\n  <div nz-row>\r\n    <div nz-col [nzSpan]=\"24\">\r\n      <nz-input-group nzApiCall [nzAddOnBefore]=\"langSelect\" [nzAddOnAfter]=\"nzApiCallButton\">\r\n        <input class=\"inp-zip\" nzSize=\"large\" nz-input placeholder=\"city name or zip code\" #locId />\r\n      </nz-input-group>\r\n    </div>\r\n  </div>\r\n  <ng-template #langSelect>\r\n    <select class=\"select-lang\" [(ngModel)]=\"langId\" nzApiCall>\r\n      <option *ngFor=\"let country of countries\" [ngValue]=\"country.code|lowercase\">{{ country.code }}</option>\r\n    </select>\r\n  </ng-template>\r\n  <ng-template #nzApiCallButton>\r\n    <button class=\"btn-submit\" nzApiCall nz-button nzType=\"primary\" nzSize=\"large\" (click)=\"ApiCall(locId.value)\">Submit</button>\r\n  </ng-template>\r\n  <h2 style=\"margin-top: 1em;\">Recommendation</h2>\r\n  <ng-template [ngIf]=\"getLevelById(this.dataLevel)\">\r\n    <div nz-row>\r\n      <div nz-col [nzSpan]=\"24\">\r\n          <div class=\"level-item\" nz-row nzType=\"flex\">\r\n            <div class=\"level-indicator\" nz-col [nzSpan]=\"3\">{{ currentLevel.level }}</div>\r\n            <div class=\"level-name\" nz-col [nzSpan]=\"21\">{{ currentLevel.name }}</div>\r\n          </div>\r\n      </div>\r\n      <div class=\"current-information\" nz-col [nzSpan]=\"24\">\r\n        <h2>Current Information</h2>\r\n        <div nz-row nzJustify=\"space-between\">\r\n          <div class=\"flex-c-center\" nz-col [nzSpan]=\"16\">\r\n            <h3 style=\"margin: 0px;border-bottom:1px solid #ccc;\">{{ currentCity }}</h3>\r\n            <h3 style=\"margin: 0px;\">{{ currentWeatherinfo }}</h3>\r\n          </div>\r\n          <div class=\"flex-c-center\" nz-col [nzSpan]=\"8\">\r\n            <h2 style=\"margin: 0px;text-align: center;\">{{ currentTemp }} °C</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\n\nimport { WeatherRoutingModule } from './weather-routing.module';\n\nimport { WeatherComponent } from './weather.component';\nimport {CommonModule} from '@angular/common';\nimport {NzButtonModule, NzGridModule, NzInputModule, NzSelectModule} from 'ng-zorro-antd';\nimport {FormsModule} from '@angular/forms';\n\n\n@NgModule({\n  imports: [WeatherRoutingModule, CommonModule, NzGridModule, NzButtonModule, NzInputModule, NzSelectModule, FormsModule],\n  declarations: [WeatherComponent],\n  exports: [WeatherComponent]\n})\nexport class WeatherModule { }\n"],"sourceRoot":"webpack:///"}